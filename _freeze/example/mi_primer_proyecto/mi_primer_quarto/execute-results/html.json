{
  "hash": "23a3b8aa7bf26c6460dec93a4bdec6ac",
  "result": {
    "markdown": "---\ntitle: \"Mi primer documento quarto\"\nformat: html\n---\n\n\n## Mi primer archivo de quarto\n\nTodo lo que se escriba en el documento quarto será entendido como texto en lenguaje humano por quarto. \n\nPor ejemplo, las siguientes operaciones matemáticas:\n\n5 + 8\n\n3 * 23\n\n20 ^ 3\n\n73 / 5\n\nTodas ellas se han impreso, pero no se ha mostrado resultado. Esto debido a que Quarto las entiende como texto.\n\n## Hacer cálculos con R\n\nSi queremos hacer cálculos con R en Quarto, debemos hacerlo dentro de `chunks` de código. Vean los siguientes ejemplos:\n\n- cinco más ocho\n\n\n::: {.cell}\n\n```{.r .cell-code}\n5 + 8\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 13\n```\n:::\n:::\n\n\n- tres por veintitrés\n\n\n::: {.cell}\n\n```{.r .cell-code}\n3 * 23\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 69\n```\n:::\n:::\n\n\n- veinte elevado al cubo\n\n\n::: {.cell}\n\n```{.r .cell-code}\n20 ^ 3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8000\n```\n:::\n:::\n\n\n- setenta y tres entre cinco\n\n\n::: {.cell}\n\n```{.r .cell-code}\n73 / 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 14.6\n```\n:::\n:::\n\n\n## Instalación de paquetes:\n\nUna de las primeras cosas que uno debe hacer es instalar paquetes. Una forma de hacerlo es a través de `install.packages()`. Los paquetes debería instalarse solo la primera vez, por lo que sugerimos no colocarlos en los chunk de código y solamente correrlos desde la consola.\n\nEn nuestro caso, los hemos puesto dentro del chunk del código, pero para evitar que se vuelvan a correr, los hemos comentado con el síbolo # al inicio de cada línea.\n\nEl símbolo # dentro de un chunk de código ocasiona que este no sea procesado por R. Se transforma en un \"comentario humano\". Si no colocamos el signo #, entonces R procesará el texto como código y ejecutará la acción correspondiente.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"medicaldata\")\n# install.packages(\"tidyverse\")\n\n### Nota: Uno solo instala los paquetes la primera vez, luego es RECOMENDABLE comentarlos con el símbolo inicial #. Si no se hace esto, suelen aparecer mensajes de error.\n```\n:::\n\n\nNota: Uno solo instala los paquetes la primera vez, luego es RECOMENDABLE comentarlos con el símbolo inicial #. Si no se hace esto, suelen aparecer mensajes de error.\n\n## Cargar paquetes\n\nUna de las primeras acciones que uno debe realizar es cargar los paquetes que usará. Por un tema de orden, sugerimos que estos siempre se carguen en un solo chunk que se encuentre al inicio del documento Quarto. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(medicaldata)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n## Consultar ayuda de filter()\n\nLa función ? permite consultar la ayuda en R. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n?filter\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nstarting httpd help server ... done\n```\n:::\n:::\n\n\n## Cargar base de datos theoph de medicaldata\n\nSe puede cargar los datos de un paquete usando la función `data()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(theoph)\n```\n:::\n\n\n## Seleccionar columna Dose de datos theoph\n\nPodemos seleccionar una columna del objeto data frame theoph usndo el operador $.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheoph$Dose\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 4.02 4.02 4.02 4.02 4.02 4.02 4.02 4.02 4.02 4.02 4.02 4.40 4.40 4.40 4.40\n [16] 4.40 4.40 4.40 4.40 4.40 4.40 4.40 4.53 4.53 4.53 4.53 4.53 4.53 4.53 4.53\n [31] 4.53 4.53 4.53 4.40 4.40 4.40 4.40 4.40 4.40 4.40 4.40 4.40 4.40 4.40 5.86\n [46] 5.86 5.86 5.86 5.86 5.86 5.86 5.86 5.86 5.86 5.86 4.00 4.00 4.00 4.00 4.00\n [61] 4.00 4.00 4.00 4.00 4.00 4.00 4.95 4.95 4.95 4.95 4.95 4.95 4.95 4.95 4.95\n [76] 4.95 4.95 4.53 4.53 4.53 4.53 4.53 4.53 4.53 4.53 4.53 4.53 4.53 3.10 3.10\n [91] 3.10 3.10 3.10 3.10 3.10 3.10 3.10 3.10 3.10 5.50 5.50 5.50 5.50 5.50 5.50\n[106] 5.50 5.50 5.50 5.50 5.50 4.92 4.92 4.92 4.92 4.92 4.92 4.92 4.92 4.92 4.92\n[121] 4.92 5.30 5.30 5.30 5.30 5.30 5.30 5.30 5.30 5.30 5.30 5.30\n```\n:::\n:::\n\n\n## Guardar columna seleccionada en dosis\n\nUno puede guardar el objeto extraido con el operador $ en otro nuevo objeto cuyo nombre se asigna con el operador asignar <-\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndosis <- theoph$Dose\n```\n:::\n",
    "supporting": [
      "mi_primer_quarto_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}