---
title: "<img data-src='images/logo-essalud.png' height='72' width='250'/> <img data-src='images/logo-pueblo.jpg' height='72' width='250'/> <img data-src='images/logo-ietsi.png' height='72' width='250'/> <FONT color='#232429'><br>Sesión 1c</FONT>"
subtitle: "<FONT color='#636363' size='7'>Programa de Formación Científica:<br>Análisis Estadístico 2022</FONT>"
author: "<FONT color='#232429' size='30'>Percy Soto-Becerra</FONT>"
institute: "<FONT color='#232429' size='5'>Instituto de Evaluación de Tecnologías en Salud e Investigación - IETSI, EsSalud<br>@github/psotob</FONT>"
date: "<FONT color='#232429' size='6'>Junio 15, 2022</FONT>"
format: 
  revealjs: 
    theme: default
    footer: "Programa de Formación Científica: Análisis Estadístico 2022 - Sesión 1c"
    logo: images/logo-ietsi.png
    transition: convex
    background-transition: zoom
    incremental: false
    slide-number: true
    preview-links: true
    # parallax-background-image: images/bg-ietsi-slide-first.png
    # parallax-background-size: "1920px 1080px"
    chalkboard: true
    code-block-background: true
    code-block-border-left: "#31BAE9"
    highlight-style: solarized
    echo: true
    multiplex: true
    touch: true
    auto-stretch: true
    link-external-icon: true
    link-external-newwindow: true
---

```{r}
#| echo: false
#| output: false

# Removing all objects including loaded libraries
rm(list = ls(all = TRUE))
gc()

# Installing and loading packages
if (!require("pacman")) {
  install.packages("pacman")
}

pacman::p_unload("all") # Unloading all package except base

pacman::p_load(tidyverse, janitor, gt, gtsummary, flextable, kableExtra, skimr, Hmisc, readxl) # Loading packages

# icons::download_fontawesome()
```

## Análisis Exploratorio de Datos

-   El `análisis exploratorio de datos` (AED) es un enfoque de análisis de conjunto de datos para `identificar patrones` y `formular nuevas hipótesis`.

-   Se trata de ver `qué nos dice los datos` más allá de ideas pre-concebidas.

-   Las `nuevas hipótesis` luego se `confirman` en `otros nuevos estudios` rigurosos.

## Análisis Exploratorio de Datos (cont.)

-   Su versión moderna: <FONT size='6'>
    -   `Minería de Datos` ('Data Minning') </FONT>
-   Usa diversas técnicas estadísticas: <FONT size='6'>
    -   Medidas de resumen estadístico</FONT> <FONT size='6'>
    -   Visualización de datos </FONT> <FONT size='6'>
    -   Modelado </FONT>

## Análisis Inicial de Datos

-   El `análisis inicial de datos` (AID) a menudo se confunde `erróneamente` con el `AED`, son `dos enfoques totalmente diferentes`.

-   Objetivo del AID:

> <FONT size='6'>*"(...) garantizar principalmente la `transparencia` y la `integridad` de las `condiciones previas` para realizar `análisis estadísticos apropiados` de manera responsable para responder `preguntas de investigación predefinidas`."* <br>*Baillie M, et al. [PLoS Comput Biol, 2022](https://doi.org/10.1371/journal.pcbi.1009819)*</FONT>

## Análisis Inicial de Datos vs. Análisis Exploratorio de Datos

```{r}
#| echo: false
library(kableExtra)
aed_aid <- data.frame(
  AID = c("1. AID es el paso inicial del proceso de confirmación de hipótesis pre-definidas.", "2. En investigación clínico-epidemiológica, a menudo queremos y deberíamos hacer AID.", "3. Proceso clave para garantizar responder adecuadamente objetivos pre-planeados de estudio."), 
  AED = c("1. AED busca generar hipótesis nuevas.", "2. Rara vez queremos AED (p. ej., enfermedades nuevas, fenómenos muy poco conocidos)", "3. Proceso con alto riesgo de contaminar respuesta a objetivos pre-planeados de estudio.")
)
kbl(aed_aid) %>% 
  kable_styling(font_size = 30, 
                # bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = T, 
                position = "center")
```

## `Mala práctica`: ¡Hacer AED en vez de AID!

-   A menudo, investigadores `no realizan AID` de manera `sistemática`.
-   `Mezclan actividades de AID` con tareas posteriores de análisis de datos, como generación o exploración de hipótesis, análisis formal e interpretación de conclusiones.
-   Como se hacen "informalmente", no se reportan en detalle generándose `análisis ocultos`.

::: aside
<FONT size='4'>[*BMC Med Res Methodol 20, 61 (2020)*](https://bmcmedresmethodol.biomedcentral.com/articles/10.1186/s12874-020-00942-y)</FONT>
:::

## `Mala práctica`: ¡Hacer AED en vez de AID! (cont.)

-   Estos `análisis ocultos` generan problemas en la reproducibilidad de los estudios.
-   Generan `muchos grados de libertad adicionales` ocasionando `problemas serios` de validez de los análisis: *p-hacking*, *post-selection inference*, *double-dipping*, *overfitting*, *etc*.
-   Iniciativa `STRATOS` ha dado pautas para realizar `AID` apropiados.

::: aside
<FONT size='4'>[*BMC Med Res Methodol 20, 61 (2020)*](https://bmcmedresmethodol.biomedcentral.com/articles/10.1186/s12874-020-00942-y)</FONT>
:::

## El problema de los análisis ocultos

![<FONT size='4'>[*BMC Med Res Methodol 20, 61 (2020)*](https://bmcmedresmethodol.biomedcentral.com/articles/10.1186/s12874-020-00942-y)</FONT>](images/hidden.png)

## Recomendaciones de STRATOS para hacer un buen AID

![<FONT size='4'>[*PLoS Comput Biol 18(2): e1009819*](https://doi.org/10.1371/journal.pcbi.1009819)</FONT>](images/TenRules.png)

## AID es un proceso iterativo

-   Proceso no lineal, al contrario, requiere `muchas iteraciones`.

-   <FONT color='red'>Riesgo</FONT>: Puede influir en análisis e inducir <FONT color='red'>conclusiones erróneas</FONT>. <FONT size='6'>

    -   Mayor riesgo de restultados falsos positivos. </FONT>

-   `Ser cuidados` para: <FONT size='6'>

    -   Evitar alterar la pregunta de investigación. </FONT><FONT size='6'>\
    -   Proveer documentación completa del proceso. </FONT>

## AID como parte del plan de investigación

![<FONT size='4'>[*Introducing the Initial Data Analysis Topic Group (TG3)*](https://www.stratos-initiative.org/sites/default/files/2021-11/STRATOS-TG3-BB-initial-data-analysis.pdf)</FONT>](images/AID_plan.png)

## AID como parte del plan de investigación

![<FONT size='4'>[*Huebner M, Vach W, et al.*](https://www.jtcvs.org/action/showPdf?pii=S0022-5223%2815%2901794-8)</FONT>](images/AID_plan2.png)

## 10 recomendaciones de STRATOS para un buen AID

-   **Regla 1**: Desarrolle un `plan de AID` que respalde el `objetivo` de la investigación.

-   **Regla 2**: AID toma `tiempo` y `recursos`.

-   **Regla 3**: AID debe ser `reproducible`.

-   **Regla 4**: El `contexto importa`, conoce tus datos.

-   **Regla 5**: Evite los adelantos, AID `no toca la pregunta de investigación`.

## 10 recomendaciones de STRATOS para un buen AID (cont.)

-   **Regla 6**: `Visualiza` tus datos.

-   **Regla 7**: `Compruebe` lo que falte.

-   **Regla 8**: Comunicar los `hallazgos` y considerar las `consecuencias`.

-   **Regla 9**: `Reporte` los hallazgos del AID en `trabajos de investigación` (¡adjunte `anexos`!)

-   **Regla 10**: Sea `proactivo` y `riguroso`.

## Análisis Inicial de Datos con R

![](images/reglas-sol1.png)

## Análisis Inicial de Datos con R

![](images/reglas-sol2.png)

## Regla 3: El contexto importa, conoce tus datos {.scrollable}

-   Dé una primera `mirada global` a los datos
-   Diseñe una `lista de validaciones` a realizar desde el proyecto.
-   `Valida` tus datos: <FONT size='6'>
    -   Identifique duplicados y detecte inconsistencias </FONT><FONT size='6'>
    -   Valores extremos no plausibles </FONT><FONT size='6'>
    -   Identifique valores perdidos </FONT>\
-   En `R`, use los 5 verbos básicos de {dplyr}: `filter()`, `select()`, `mutate()`, `arrange()` y `summarise()` para hacer `consultas` (`"queries"`) a sus datos.

```{r}
#| include: false
library(tidyverse)
library(readxl)
library(Hmisc)
library(skimr)
datos_org <- read_excel("maca_meno_perclin.xlsx")
datos <- rbind(datos_org, datos_org[c(1, 5, 9), ])
```

## Regla 3 con R: Resumen global de los datos {.scrollable}

::: panel-tabset
### glimpse()

```{r}
glimpse(datos)
```

### contents()

-   También de `Hmisc`:

```{r}
contents(datos)
```

```{r}
html(contents(datos), levelType = 'table')
```
:::

## Regla 3 con R: Detecte duplicados {.scrollable}

-   Función `get_dupes` del paquete `{janitor}`.

::: panel-tabset
### Filas duplicadas

-   Si solo colocamos `get_dupes()`, entonces nos identifica duplicados de fila completa:

```{r}
library(janitor)
datos %>% 
  get_dupes()
```

### ID duplicados

-   Si colocamos una o más variables dentro de `get_dupes()`, entonces nos identifica duplicados solo de esa variable.

-   A menudo lo hacemos para encontrar individus duplicados.

```{r}
datos %>% 
  get_dupes(id_raton)
```

### Elimine duplicados

-   Si el duplicado es erróneo, lo podemos eliminar con `distinct` y el argumento `.keep_all = TRUE`.

-   Se debde espeficiar si el duplicado es de fila o de alguna variable (p. ej., id).

```{r}
datos <- datos %>% 
  distinct(id_raton, .keep_all = TRUE)

datos
```
:::

## Regla 3 con R: Identifique valores extremos no plausibles {.scrollable}

::: panel-tabset
### skim()

-   Función de paquete `{skimr}`:

        1)  `install.packages("skimr)`

        2)  `library(skimr)`

-   Revise, variable por variable `valores extremos no plausibles` o `plausibles, pero sospechosamente extremos`. El valor mínimo es `p0` y el valor máximo es `p100`. Deben ser plausibles.

```{r}
skim(datos)
```

### describe()

-   Función de paquete `{Hmisc}`:

        1)  `install.packages("Hmisc")`

        2)  `library(Hmisc)`

-   Permite hacer algo similar

```{r}
describe(datos)
```

### Gráficos

- El `gráfico de cajas` nos muestra la disrtibución de la variable numérica en termino de sus cuantiles.

- Los `puntos aislados`, fuera de las cajas y bigotes, son considerados valores extremos. 

- Estos pueden ser `plausibles` o `no plausibles`. 

- El gráfico de cajas permite `identificar`, rápidamente, `valores extremos` potencialmente `no plausibles` o `problemáticos`.

```{r}
boxplot(datos$peso_final)
```

```{r}
boxplot(datos$peso_utero)
```
:::

## Regla 3 con R: Haga algunas consultas (queries) de interés {.scrollable}

::: panel-tabset
### Consulta 1

Muestre el peso inicial mínimo, máximo y promedio del grupo control:

```{r}
#| code-line-numbers: "|2|3-7"
datos %>% 
  filter(tratamiento == "control") %>% 
  summarise(
    minimo_peso = min(peso_inicial), 
    maximo_peso = max(peso_inicial), 
    promedio_peso = mean(peso_inicial)
  )
```

### Consulta 2

Muestre los pesos inicial máximos, mínimo y promedio según grupo de tratamiento. También muestre el número de ratones por grupo:

```{r}
#| code-line-numbers: "|2|3-7"
datos %>% 
  group_by(tratamiento) %>% 
  summarise(
    minimo_peso = min(peso_inicial), 
    maximo_peso = max(peso_inicial), 
    promedio_peso = mean(peso_inicial), 
    n_ratones = n()
  )
```

### Consulta 3

Muestre los id_jaula con el número de ratones por jaula

```{r}
#| code-line-numbers: "|2|3"
datos %>% 
  group_by(id_jaula) %>% 
  summarise(n_ratones_por_jaula = n())
```

### Consulta 4

Identifique los ID de los ratones del grupo control con una razón glucosa / colesterol \> 1

```{r}
#| code-line-numbers: "|2"
datos %>% 
  filter(tratamiento == "control" & glucose / chol > 1)
```

Otra forma de hacerlo, es crear primerio la razón glucose / chol y filtrar:

```{r}
#| code-line-numbers: "|2|3"
datos %>% 
  mutate(ratio_gluc_chol = glucose / chol) %>% 
  filter(tratamiento == "control" & ratio_gluc_chol > 1)
```
:::

## Análisis descriptivo

-   Luego de AID uno ya está listo para describir sus datos.

-   Hay muchas formas de describir datos, todos son combinación de `medidas de resumen` en `texto` y `tablas`, así como gràficos `gráficos`.

-   Describir las `medidas` que faciliten la comparación de nuestra población de estudio con otras.

## Análisis descriptivo de variable numérica {.scrollable}

::: panel-tabset
### Tend. Central
-   Medias de tendencia central <FONT size='6'>
    -   Media </FONT><FONT size='6'>
    -   Mediana (es también `medida de posición`) </FONT><FONT size='6'>
    -   Moda (no es usual) </FONT>
    
### Posición 
-   Medidas de posición <FONT size='6'>
    -   Cuantiles (en general) </FONT><FONT size='6'> 
    -   Mediana = percentil 50 (es también medida de `tendencia central`) </FONT><FONT size='6'>
    -   Percentil 25 (p25) </FONT><FONT size='6'>
    -   Percentil 75 (p75) </FONT>
    
### Dispersión    
-   Medidas de dispersión <FONT size='6'>
    -   Rango (máximo - mínimo) </FONT><FONT size='6'>
    -   Varianza / Desviación estándar </FONT><FONT size='6'>
    -   Rango intercuartílico (p75 - p25) </FONT>    
    
### Distribución

- Simétrica
- Asimétrica (o 'sesgada')
<FONT size='6'>
    - Positiva (A la derecha) </FONT><FONT size='6'>
    - Negativa (A la izquierda) </FONT>
    
- Resumiendo:

![](images/distrib.png)
:::

## Análisis descriptivo de variable numérica - recomendaciones{.scrollable}

::: panel-tabset
### ¿Qué reportar?

- `Media` +/- `Desviación estándar` <FONT size='6'>
    - Si distribución es `simétrica` y `variabilidad es relativamente baja`. </FONT><FONT size='6'>
    - La distribución normal es un ejemplo de distribución simétrica. </FONT>
    
- `Mediana` (`percentil 25` - `percentil 75`) <FONT size='6'>
    - Si distribución es  `asimétrica` o `variabilidad es relativamente alta`. </FONT><FONT size='6'>
    - Mejor `percentiles 25 y 75` en vez de rango intercuartílico (más información`de los primeros) </FONT> 

- `Máximo` y `mínimo` siempre: <FONT size='6'>
    - Es mejor que rango, provee más información.</FONT><FONT size='6'>
    - Preferentemente en `tabla principal`.</FONT><FONT size='6'>
    - Si problemas de espacio, usar `tabla anexa`.</FONT>

### Ejemplo 1

**Para la variable numérica peso inicial** Se usa la función `skim()` y se coloca la variable de interés. 

  <FONT size='6'>
  
  - `p0` es el valor `mínimo` y `p100` es el valor `máximo`. </FONT><FONT size='6'>
  
  - La `mediana` es `p50`. </FONT><FONT size='6'>
  
  - `mean` es el `promedio` y `sd` es la `desviación estándar`. </FONT>

```{r}
# Para la variable numérica peso_inicial
datos %>% 
  skim(peso_inicial)
```

También analizamos la `distribución` de manera gráfica con un histograma. Se aprecia que la variable es aproximadamente simétrica: 

<FONT size='6'>

- Media vs mediana muy parecidas y </FONT><FONT size='6'>

- Gráfico con desviaciones ligeras de simetría. </FONT>

Por lo tanto, decidimos reportar `media (desviación estándar)`. `Mímimo` y `máximo` debería tambier reportarse (en texto o en tabla anexo).

```{r}
hist(datos$peso_inicial)
```

**Descripción del resultado (ejemplo)**: 

> El peso inicial varió entre `r datos %>% skim(peso_inicial) %>%  pull(numeric.p0) %>% round(2)` g y `r datos %>% skim(peso_inicial) %>%  pull(numeric.p100) %>% round(2)` g, con un promedio de `r datos %>% skim(peso_inicial) %>% pull(numeric.mean) %>% round(2)` g (DE = `r datos %>% skim(peso_inicial) %>% pull(numeric.sd) %>% round(2)` g). 

### Ejemplo 2

**Para la variable numérica triglicéridos al final del estudio**, se tiene las siguientes medidas de resumen:

```{r}
datos %>% 
  skim(tag)
```


- Notar que la `media` y la `mediana` difieren en aprox. `12 mg/dl`. Esto `sugiere` la existencia de alguna `asimetría` en la `distribución` de esta variable. 

- Veamos el gráfico:

```{r}
hist(datos$tag)
```

- Se aprecia que la distribución es `sesgada hacia la derecha`. 

- Por lo tanto, la media no sería un buen `representante` de toda la distribución de datos. 

- La `mediana` es `más robusta` al sesgo de la distribución y `se prefiere` reportarla en compañía de los `percentiles 25` y `75`. 

**Descripción del resultado (ejemplo)**: 

> El nivel de triglicéridos al final del seguimiento varió entre `r datos %>% skim(tag) %>%  pull(numeric.p0) %>% round(2)` mg/dL y `r datos %>% skim(tag) %>%  pull(numeric.p100) %>% round(2)` mg/dL, con una mediana de `r datos %>% skim(tag) %>% pull(numeric.p50) %>% round(2)` mg/dL (`r datos %>% skim(tag) %>% pull(numeric.p25) %>% round(2)` mg/dL a `r datos %>% skim(tag) %>% pull(numeric.p75) %>% round(2)` mg/dL). 

::: 

## Análisis descriptivo de variable categórica{.scrollable}

::: panel-tabset
### ¿Qué reportar?

-  Acompañe `siempre frecuencias absolutas` con `relativas`.

-   Cuando interprete, no reporte solo % o proporción, también indique el n, al menos entre paréntesis.

-   `Frecuencia absoluta`: Es el `número` de individuos.

-   `Frecuencia relativa`: Es un `porcentaje` (entre 0% y 100%) o una `proporción` (entre 0 y 1).

-   <FONT color='red'>Cuidado</FONT>: Reportar bien si es porcentaje (colocar <FONT color='red'>siempre</FONT> el %) o es una proporción (<FONT color='red'>nunca</FONT> colocar el %).

- <FONT color='red'>Excepción</FONT>: En muestras que usan pesos muestrales, puede ser mejor solo reprotar frecuencias relativas (% o proporciones) y las frecuencias absolutas (observadas[no ponderadas] y ponderadas) dejarlas para el anexo.

### Ejemplo 1

- Podemos usar la función `tabyl()` del paquete `{janitor}` para describir la distribución de frecuencias relativas y acumuladas:

```{r}
datos %>% 
  tabyl(tratamiento) 
```

- La columna `percent()` es en realidad una proporción. Para reportar un `porcentaje`, se puede agregar `adorn_pct_formatting()`: 

```{r}
datos %>% 
  tabyl(tratamiento) %>% 
  adorn_pct_formatting()
```

**Descripción del resultado (ejemplo)**: 

> Los grupos control, maca y triple dosis maca + citro representaron el 21.7% (n = 5) de los animales de experimentación. 

### Ejemplo 2

```{r}
#| echo: false
datos %>% 
  mutate(
    glucose_cat = case_when(
      glucose < 120 ~ "60-120 mg/dL", 
      glucose > 120 ~ "120-200 mg/dL", 
      TRUE ~ as.character(NA)
    )
  ) -> datos
```

- Para la variable `Glucosa categorizada` tenemos la siguiente distribución de frecuencias: 

```{r}
datos %>% 
  tabyl(glucose_cat) %>% 
  adorn_pct_formatting()
```

- Se puede mejorar la presentación usando la función `gt()` del paquete `{gt}`.

```{r}
library(gt)
datos %>% 
  tabyl(glucose_cat) %>% 
  adorn_pct_formatting() %>% 
  gt()
```

**Descripción del resultado (ejemplo)**: 

> El 52.2% (n = 12) de los animales de experimentación tuvo valores de glucosa entre 60 y 120 mg/dL. 

:::
## Recomendaciones sobre reporte descriptivo según STROBE {.scrollable}

- *`Strengthening the Reporting of Observational Studies in Epidemiology (STROBE)`* es una `guía de reporte` de `estudios observacionales` en `salud` mundialmente reconocida.

- Las `revistas de alto impacto` solicitan que los investigadores se adhieran a estas guías y llenen un checklist.

![<FONT size='4'>[Vanderbroucke JP, Elm Ev, Altman DG, et al. 2007](https://www.acpjournals.org/doi/epdf/10.7326/0003-4819-147-8-200710160-00010-w1)</FONT>](images/strobe.png)

:::: {.columns}

::: {.column width="50%"}
- Lo que mencionamos acerca de reportar variables numéricas:
:::

::: {.column width="50%"}
![<FONT size='4'>[Vanderbroucke JP, Elm Ev, Altman DG, et al. 2007](https://www.acpjournals.org/doi/epdf/10.7326/0003-4819-147-8-200710160-00010-w1)</FONT>](images/strobe-description.png)
:::
:::: 

:::: {.columns}

::: {.column width="50%"}
![<FONT size='4'>[Vanderbroucke JP, Elm Ev, Altman DG, et al. 2007](https://www.acpjournals.org/doi/epdf/10.7326/0003-4819-147-8-200710160-00010-w1)</FONT>](images/strobe-missing.png)
:::

::: {.column width="50%"}
- También debe reportarse el `número de participantes` con `datos perdidos` para cada variable de interés
:::

::::

## Recomendaciones adicionales para mejorar un reporte descriptivo transparente según REMARK {.scrollable}

-   *`Reporting Recommendations for Tumor Marker Prognostic Studies (REMARK)`* es una guía de reporte para estudios de marcadores pronósticos:
<FONT size='6'>
    - Inicialmente para cáncer. </FONT> <FONT size='6'>
    - Debido a su amplio alcance, se usa en casi cualquier campo (p. ej., cardiología, neurología, etc.) donde se evalúe un marcador pronóstico.</FONT>

![<FONT size='4'>[Sauerbrei W, Taube SE, McShane LM, et al. JNCI 2018](https://doi.org/10.1093/jnci/djy088)</FONT>](images/remark.png)


![<FONT size='4'>[Sauerbrei W, Taube SE, McShane LM, et al. JNCI 2018](https://doi.org/10.1093/jnci/djy088)</FONT>](images/remark-description.png)

:::: {.columns}

::: {.column width="50%"}
-   REMARK indica que `debe reportarse`  la `distribución` de los `marcadores` o `factores pronóstico` de interés y del `desenlace`: <FONT size='6'>
    -   Biomarcador o score de predicción </FONT><FONT size='6'>
    -   Desenlace </FONT>
:::
 
::: {.column width="50%"}    
![<FONT size='4'>[Sauerbrei W, Taube SE, McShane LM, et al. JNCI 2018](https://doi.org/10.1093/jnci/djy088)</FONT>](images/remark-distribution.png)    
:::

::::

-   Lamentablemente es una mala práctica no hacerlo. <FONT size='6'>
    -   Usen anexos si el espacio queda corto y no quieren distraer al lector del mensaje principal. </FONT><FONT size='6'>
    -   No hay excusa para no reportar esto. </FONT>

## Recomendaciones adicionales para mejorar un reporte descriptivo transparente (cont.)

-   No cree la tabla "manualmente".

-   `Genere` las `tablas` con `código`: <FONT size='6'>

    -   Es `reproducible`. </FONT><FONT size='6'>
    -   Menos propenso a error de digitación o *`lapsus calamis`*. </FONT><FONT size='6'>
    -   Han habido retracciones de ensayos clínicos por errores de tipeo!! </FONT><FONT size='6'>
    -   Es más rápido, ahorrarás tiempo!! </FONT>

## Generación de tabla descriptiva reproducible 

-   A menudo se la conoce como `la Tabla 1`. <FONT size='6'>
    -   Puede haber más de una, no hay reglas, solo buenos o malos criterios para presentar resultados. </FONT>
-   Hay muchos paquetes: `{flextable}`, `{gt}`, etc.
-   Sugerimos: `{gtsummary}`: [https://www.danieldsjoberg.com/gtsummary/](https://www.danieldsjoberg.com/gtsummary/)

## Tabla decriptiva reproducible con {gtsummary}

-   Permite `crear tablas` en formato de `revistas biomédicas`.

-   Función `tbl_summary()` para tablas descriptivas univariadas y comparativas (bivariadas)

<center>![](images/tbl_summary_demo1.gif)</center>

## Función tbl_summary() paso a paso {.scrollable}

::: panel-tabset

### Paso 1

- Seleccionar las variables que desea reportar con función `select()`, luego usar `tbl_summary()`:

```{r}
#| echo: false
library(haven)
datos2 <- read_dta("maca_meno_fase1.dta") %>% 
  as_factor()
```


```{r}
#| code-line-numbers: "|2|3|4|"
library(gtsummary)
datos2 %>% 
  select(age, race, married2, weight, height, e2, lh, fsh, prog) %>% 
  tbl_summary()
```

- Por defecto, las `variables numéricas` son reportadas como `mediana` (`percentil 25`, `percentil 75`).

- Asimismo, `si una variable numérica tiene pocos valores`, esta se muestra como `categórica`.

- Uno puede `personalizar` esto. Veamos los siguientes pasos.

### Paso 2

- Indicar  `qué variables` son `numéricas` con el argumento `type = `

```{r}
#| code-line-numbers: "|4|"
datos2 %>% 
  select(age, race, married2, weight, height, e2, lh, fsh, prog) %>% 
  tbl_summary(
    type = list(height ~ "continuous")
  )
```

- Notar que ahora `height` es considerada una variable numérica y se reporta como `mediana` con sus respectivos `percentiles`. 

### Paso 3

- ¿Qué pasa si queremos reportar `media` (`desviación estándar`) para las variables simétricas `height` y `weight`, pero mantener la `mediana` (`percentiles`) para las variables `e2`, `lh`, `fsh`, y `prog`. 

- Se puede configurar esto con el argumento `statistic = `

```{r}
#| code-line-numbers: "|5|"
datos2 %>% 
  select(age, race, married2, weight, height, e2, lh, fsh, prog) %>% 
  tbl_summary(
    type = list(height ~ "continuous"), 
    statistic = list(c(age, weight, height) ~ "{mean} ({sd})", c(e2, lh, fsh, prog) ~ "{median} ({p25}, {p75})")
  )
```

### Paso 4

- Se pueden realizar `más configuraciones adicionales` con `R` o realizarlas `manualmente` en el Word.

- Para más información sobre cómo hacer tablas descriptivas con `{gtsummary}`: [https://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html](https://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html)

- Por ejemplo, podemos crear una tabla con `máximos` y `minimos`: 

```{r}
#| code-line-numbers: "|5|"
datos2 %>% 
  select(age, race, married2, weight, height, e2, lh, fsh, prog) %>% 
  tbl_summary(
    type = list(height ~ "continuous"), 
    statistic = list(c(age, weight, height, e2, lh, fsh, prog) ~ "{min} - {max}")
  )
```

### Paso 5 

- Se puede `descargar` la tabla en formato `MS. Word` para `reporte reproducible`.

- Primero se  `guarda`  como un `objeto` de `R`:

```{r}
#| code-line-numbers: "|6|"
datos2 %>% 
  select(age, race, married2, weight, height, e2, lh, fsh, prog) %>% 
  tbl_summary(
    type = list(height ~ "continuous"), 
    statistic = list(c(age, weight, height) ~ "{mean} ({sd})", c(e2, lh, fsh, prog) ~ "{median} ({p25}, {p75})")
  ) -> tabla1 

tabla1
```

- Luego, al objeto se lo `guarda` como un archivo de `MS Word`. Para esto, se usa la función `as_flex_table()` del paquete `{gtsummary}` y la función `save_as_docx()` del paquete `{flextable}`: 

```{r}
#| code-line-numbers: "|4|5|"
# install.packages(flextable)
library(flextable)
tabla1 %>% 
  as_flex_table() %>% 
  save_as_docx(path = "Tabla1.docx")
```

- El `MS Word` aparecerá en la `carpeta` del `proyecto`:

![](images/tabla1-rstudio.png)

- Y la `tabla` en `Word` lucirá así:

![](images/tabla1-word.png)

:::

## 

::: r-fit-text
<br>

<center>

slides:

</center>

<center>

[https://bit.ly/3n6Ejzb](https://ietsi-academy-aed.netlify.app/sesiones/sesion-1/sesion-1c)

</center>
:::

## 

::: r-fit-text
<center>**¡Gracias por su atención!**</center>

<center>**¡Encantado de responder sus consultas!**</center>

<br>

<center>**Percy Soto-Becerra**</center>

<br>

<center>`r icons::fontawesome$brands$twitter` `r icons::fontawesome$brands$github` @psotob91</center>
<center>`r icons::fontawesome$solid$inbox` **percys1991\@gmail.com**</center>
:::

::: aside
<br> <FONT size='4'>Presentación creada vía `Revealjs` en `Quarto` en `RStudio`.</FONT>
:::
