---
title: "Sesion 01 - Introducción a la visualización de datos con `ggplot2` y transformación de datos con dplyr"
subtitle: "R para Ciencia de Datos en Salud 1: Fundamentos" 
author: Percy Soto-Becerra, MD MSc(c) <br> @PercySotoBecer1
date: "`r Sys.Date()`" 
output: 
    xaringan::moon_reader:
      lib_dir: libs
      css: ["default", "metropolis", "metropolis-fonts", "trug-ggplot2.css"]
      nature:
        ratio: 16:9
        highlightStyle: github
        highlighLine: true
        countIncrementalSlides: false
        slideNumberFormat: "%current%"
      includes: 
        after_body: insert-logo.html
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.width=4.25, fig.height=3.5, fig.retina=3,
                      message=FALSE, warning=FALSE, cache = TRUE, 
                      autodep = TRUE, hiline=TRUE)
knitr::opts_hooks$set(fig.callout = function(options) {
  if (options$fig.callout) {
    options$echo <- FALSE
    options$out.height <- "99%"
    options$fig.width <- 16
    options$fig.height <- 8
  }
  options
})
hook_source <- knitr::knit_hooks$get('source')
knitr::knit_hooks$set(source = function(x, options) {
  if (!is.null(options$hiline) && options$hiline) {
    x <- stringr::str_replace(x, "^ ?(.+)\\s?#<<", "*\\1")
  }
  hook_source(x, options)
})
options(htmltools.dir.version = FALSE, width = 90)
as_table <- function(...) knitr::kable(..., format='html', digits = 3)
```

---
layout: true
# ¿Por qué ggplot2?
---

.left-column[
![](img/hadley.jpg)
__Hadley Wickham__
]

.right-column[.font150[
"The transferrable skills from ggplot2 are not the idiosyncracies of plotting syntax, but a powerful way of thinking about visualisation, as a way of **mapping between variables and the visual properties of geometric objects** that you can perceive."
]
.footnote[<http://disq.us/p/sv640d>]
]


---

- Visualización de datos .hl[funcional] 

    1. Manipula datos mientras grafica
    2. Mapea datos con elementos visuales
    3. Retoca escalas, guías, ejes, etiquetas, temas

- Fáil de .hl[razonar] acerca de cómo los datos conducen a su visualización

- Fácil de .hl[iterar]

- Fácil de ser .hl[consistentes]

---
layout: true
# Instalación de ggplot2

---

<br>
<br>

**Fácil**: Instalar [tidyverse](http://tidyverse.org)

```r
install.packages('tidyverse')
```

**Intermedio**: Instalar solo `ggplot2`

```r
install.pacakages('ggplot2')
```

---

## Cargar tidyverse

```{r library-tidyverse, echo=TRUE, message=TRUE, warning=TRUE}
library(tidyverse)
```

---

## Otro paquetes que necesitaremos

```{r library-extra, message=FALSE}
library(tidyverse)
library(dslabs)         # for the `dslabs` data 
```

---
layout: true
# gg es el acrónimo para 'Grammar of Graphics'

Capa 1: Creación de objeto ggplot
 
.left-column[
### Datos

```r
g <- ggplot()
```
]

---

.right-column[
#### Datos 'tidy'

1. Cada variable conforma una .hl[columna]

2. Cada columna conforma una .hl[fila]

3. Cada unidad de observación conforma una tabla

<br><br>El siguiente ejemplo proviene de 

```r
data(murders, package = "dslabs") 
```

]

---

.right-column[
```{r tidy-messy1, results='asis', echo=FALSE}
knitr::kable(murders, format = 'html')
cat('\n<br>\n')
knitr::kable(murders, format = 'html')
```
]

---

layout: true
# gg es el acrónimo para 'Grammar of Graphics'

## Capa 2: Mapa entre datos y estética básica 

.left-column[
### Data
### Aesthetics

```r
g + aes()
```

]
---

.right-column[
Mapea datos a elementos visuales o parametros

- population

- total 

- region 

- abb

- region

]

---

.right-column[
Mapea datos a elementos visuales o parametros

- population → **x**

- total → **y**

- abb → *label*

- region → *shape*, *color*, etc.

]

---
layout: true
# gg es el acrónimo para 'Grammar of Graphics'

## Capa 3: Se agrega capa de objetos geométricos
.left-column[
### Data
### Aesthetics
### Geoms

```r
g + geom_*()
```
]

---

Objetos geométricos se muestran en los gráficos:

.font80[
| Type | Function |
|:----:|:--------:|
| Point | `geom_point()` |
| Line | `geom_line()` |
| Bar | `geom_bar()`, `geom_col()` |
| Histogram | `geom_histogram()` |
| Regression | `geom_smooth()` |
| Boxplot | `geom_boxplot()` |
| Text | `geom_text()` |
| Vert./Horiz. Line | `geom_{vh}line()` |
| Count | `geom_count()` |
| Density | `geom_density()` |
]

---

.right-column[
Aquí el [top 10 de geoms más populares](https://eric.netlify.com/2017/08/10/most-popular-ggplot2-geoms/)<sup>1</sup>

Tipea `geom_` en RStudio

---
layout: false
class: inverse, center, middle

# Gracias!

.font150.text-white[
@PercySotoBecer1 <br>
github.com/psotob <br>
Percy Soto-Becerra
]