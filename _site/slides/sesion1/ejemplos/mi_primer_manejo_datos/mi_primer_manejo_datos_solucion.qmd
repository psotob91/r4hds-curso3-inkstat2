---
title: "Mi primer manejo de datos"
---

## Instrucciones

-   Descripción: En este taller nos familizaremos con el manejo de datos

-   Realice las siguientes acciones en su computador:

    1)  Trabaje sobre este documento Quarto.

    2)  Importaremos el conjunto de datos `maca_meno_fase1.dta` y lo guardaremos con el nombre de `datos`.
    

## Desarrollo del taller

### Cargar los paquetes

Con este código se cargan los paquetes. Es recomendable instalar todos los paquetes al inicio y luego cargarlos todos! Solo instala una vez, luego comenta para no reinstalar a cada rato. 

Tip: Use library(paquete). Cargue `tidyverse`, `haven` y `labelled`. Si no están instalados, instalelos.

```{r}
library(tidyverse)
library(labelled)
library(haven)
```

### Importar datos

Tip: Como es archivo Stata, use read_stata() junto con as_factor() para recuperar metadatos.

```{r}
datos <- read_stata("maca_meno_fase1.dta") %>% 
  as_factor()

datos
```

### Filtre al grupo tratado placebo y guardelo como datos2. Imprima datos2

Tip:  Use filter()

```{r}
datos %>% 
  filter(treat == "Placebo") -> datos2

datos2
```

### Filtre a quienes tienen edad > 27 y menor de 33 sin guardarlo, solo imprimalo:

Tip: Use filter()

```{r}
datos %>% 
  filter(age > 27 & age < 33) 
```

### Selecciona las variables id, treat, age y married. Guarde como data3 e imprima.

```{r}
datos %>% 
  select(id, treat, age, married) -> data3

data3
```


### Elimine las variables married2 y weight. No guarde solo imprima.

```{r}
datos %>% 
  select(-married2, -weight)
```


### Seleccione id, time y race y married2. Luego, filtre por status marital sin pareja.

```{r}
datos %>% 
  select(id, time, race, married2) %>% 
  filter(married2 == "Without couple")
```


### Seleccione id, treat, weight y height. Luego, calcule el indice de masa corporal. Guarde como data4 e imprima. Llame a esta variable imc.

Tip: Anide select() con mutate()

```{r}
data4 <- datos %>% 
  select(id, treat, weight, height) %>% 
  mutate(imc = weight / height ^ 2) # ^ : ALT + 94

data4
```

### Categorice edad en edad 20-25, 26-35, 36-41. Guarde como data5 e imprima.

```{r}
datos %>% 
  mutate(
    edad_cat = case_when(
      age >= 20 & age <= 25 ~ "20-25 años", 
      age >= 26 & age <= 35 ~ "26-35 años", 
      age >= 36 & age <= 41 ~ "36-41 años", 
      TRUE ~ as.character(NA)
    )
  ) -> data5


data5
```


### Cree una variable nueva llamada elegibilidad, que tenga dos valores: elegible cuando el estado marital es con pareja, no proceda de Callao y tenga IMC mayor a 20, caso contrario, denominarlo no elegible.

```{r}
datos %>% 
  mutate(
    imc = weight / height ^ 2, 
    elegibilidad = case_when(
      married2 == "With couple" & procedence != "Callao" & imc > 20 ~ "Elegible", 
      TRUE ~ "No elegible"
    )
  )
```


### Categorice indice de masa corporal en <18.5 (Bajo peso), 18.5 a 24.9 (peso normal), 25-29.9 (sobrepeso) y 30+ (obeso). Llame a esta variable imc_cat. GUarde como data6 e imprima

```{r}
datos %>% 
  mutate(
    imc = weight / height ^ 2, 
    imc_cat = case_when(
      imc < 18.5 ~ "<18.5 (Bajo peso)", 
      imc >= 18.5 & imc < 25 ~ "18.5 a 24.9 (peso normal)", 
      imc >= 25 & imc < 30 ~ "25-29.9 (sobrepeso)", 
      imc >= 30 ~ "30+ (obeso)"
    )
  ) -> data6

data6
```


### Coloque etiquetas a imc y a imc_cat para que otro investigador entienda su significado.

```{r}
data6 %>% 
  set_variable_labels(
    imc = "Índice de Masa Corporal (kg/m2)", 
    imc_cat = "Categoría de IMC según OMS"
  ) -> data7

data7
```

### Cambiar el nombre del imc a bmi y de imc_cat bmicat

```{r}
data7 %>% 
  rename(
    bmi = imc,
    bmicat = imc_cat
  ) -> data8

data8
```

### Quedarse solo con las filas 1, 3, 5 y 8 de los datos:

```{r}
data8 %>% 
  slice(c(1, 3, 5, 8))
```

### Seleccionar, id, peso, tratamiento y imc y reordenarlo segun imc de mayor a menor:

```{r}
data8 %>% 
  select(id, weight, treat, bmi) %>% 
  arrange(desc(bmi))
```

